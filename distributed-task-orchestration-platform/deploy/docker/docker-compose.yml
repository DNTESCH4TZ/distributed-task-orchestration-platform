version: '3.8'

services:
  # ========================================
  # PostgreSQL - Main Database
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: task-orchestrator-postgres
    environment:
      POSTGRES_USER: orchestrator
      POSTGRES_PASSWORD: orchestrator
      POSTGRES_DB: task_orchestrator
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orchestrator"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-network

  # ========================================
  # Redis - Cache & Pub/Sub
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: task-orchestrator-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-network

  # ========================================
  # RabbitMQ - Message Broker
  # ========================================
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: task-orchestrator-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-network

  # ========================================
  # ClickHouse - Analytics Database
  # ========================================
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: task-orchestrator-clickhouse
    environment:
      CLICKHOUSE_DB: task_orchestrator_analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    ports:
      - "9000:9000"    # Native client port
      - "8123:8123"    # HTTP interface
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - orchestrator-network

  # ========================================
  # Prometheus - Metrics Collection
  # ========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: task-orchestrator-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    volumes:
      - ./../../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - orchestrator-network

  # ========================================
  # Grafana - Monitoring Dashboard
  # ========================================
  grafana:
    image: grafana/grafana:latest
    container_name: task-orchestrator-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: ""
    ports:
      - "3000:3000"
    volumes:
      - ./../../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - orchestrator-network

  # ========================================
  # Jaeger - Distributed Tracing
  # ========================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: task-orchestrator-jaeger
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: :9411
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - "5775:5775/udp"  # Zipkin compact thrift (deprecated)
      - "6831:6831/udp"  # Jaeger compact thrift
      - "6832:6832/udp"  # Jaeger binary thrift
      - "5778:5778"      # Serve configs
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger collector HTTP
      - "14250:14250"    # Jaeger gRPC
      - "9411:9411"      # Zipkin compatible endpoint
    networks:
      - orchestrator-network

# ========================================
# Volumes
# ========================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  clickhouse_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# ========================================
# Networks
# ========================================
networks:
  orchestrator-network:
    driver: bridge

